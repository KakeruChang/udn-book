// timeline
:root {
  --scenePerspective: 1;
  --scenePerspectiveOriginX: 50;
  --scenePerspectiveOriginY: 30;
  --itemZ: 2;
  --cameraSpeed: 100;
  --cameraZ: 0;
  --viewportHeight: 0;
  --dataLength: 0;
}
.viewport {
  height: calc(var(--viewportHeight) * 1px);
  background-color: white;
}
.viewport .scene3D-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  perspective: calc(var(--scenePerspective) * var(--cameraSpeed) * 1px);
  perspective-origin: calc(var(--scenePerspectiveOriginX) * 1%)
    calc(var(--scenePerspectiveOriginY) * 1%);
  will-change: perspective-origin;
  transform: translate3d(0, 0, 0);
}
.viewport .scene3D-container .scene3D {
  position: absolute;
  top: 0;
  height: 100vh;
  width: 100%;
  transform-style: preserve-3d;
  transform: translateZ(calc(var(--cameraZ) * 1px));
  will-change: transform;
}
.viewport .scene3D-container .scene3D {
  > .container {
    position: absolute;
    display: flex;
    width: 100%;
    top: 40%;
    &:nth-child(2n) {
      left: 0;
    }
    &:nth-child(2n + 1) {
      right: 0;
    }

    @for $i from 0 through 25 {
      &:nth-child(#{$i}) {
        transform: translate3D(
          random(50) - 25 * 1%,
          random(100) - 50 * 1%,
          calc(var(--itemZ) * var(--cameraSpeed) * #{$i} * -1px)
        );
      }
    }
  }
}

.even {
  flex-direction: row-reverse;
}
.content {
  flex: 0 0 50%;
  max-width: 50%;
}
.at-center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.year {
  font-size: 80px;
}

// fade
.fade-in {
  width: 100% !important;
}
.fade-out {
  width: 0 !important;
}
